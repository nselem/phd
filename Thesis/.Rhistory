View(ActinosHeatPlot.m)
ActinosHeatPlot.m<- ddply(ActinosHeatPlot.m, .(variable), transform,count(value))  ## rescale escala toda la matriz, scale por columnas
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
View(ActinosHeatPlot)
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
library(scales)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlot.m <- melt(ActinosHeatPlot,id ="RastId")
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ctinosHeatPlot.m
ActinosHeatPlot.m <- melt(ActinosHeatPlot,id ="RastId")
HP_Act_less_TOTAL<-ActinosHeatPlot.m [ variable!="TOTAL"] ## works as expected
HP_Act_less_TOTAL<-subset(ActinosHeatPlot.m,variable!="TOTAL") ## works as expected
ActinosHeatPlot.m<-subset(ActinosHeatPlot.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosTotalBP.m<-merge(ActinosHeatPlotBP.m,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ActinosHeatPlotBP.m <- melt(ActinosHeatPlot,id ="RastId")
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlotBP.m,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastId") ## works as expected
clear
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastId") ## works as expected
View(ActinosTotalBP.m)
View(ActinosTotalBP.m)
View(ActinosTaxa)
ActinosHeatPlotBP.m <- melt(ActinosHeatPlot,id =c("RastId","Name","Phylum","Class","Order","Family"))
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
View(ActinosHeatPlot)
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
View(ActinosHeatPlotBP.m)
View(ActinosHeatPlotBP.m)
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
CyanosTotalBP.m<-merge(CyanosHeatPlot,CyanosTaxa,by.x="RastId",by.y="RastId") ## works as expected
CyanosCentral <- read.table("chapter5/CyanosCentral", header=TRUE, sep="\t")
CyanosHeatPlot <- read.table("chapter5/CyanosHeatPlot", header=TRUE, sep="\t")
CyanosNp <- read.table("chapter5/CyanosNp", header=TRUE, sep="\t")
CyanosSMASH <- read.table("chapter5/CyanosSMASH", header=TRUE, sep="\t")
CyanosTaxa <- read.table("chapter5/CyanosTaxa", header=TRUE, sep="\t")
CyanosTotalBP.m<-merge(CyanosHeatPlot,CyanosTaxa,by.x="RastId",by.y="RastId") ## works as expected
CyanosHeatPlotBP.m <- melt(CyanosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
CyanosHeatPlotBP.m<-subset(CyanosHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(CyanosHeatPlotBP.m, aes(x=CyanosHeatPlotBP.m$variable, y=CyanosHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggsave("chapter5/expansion_plotCyanos.pdf", plot = expansion_plotActino,height = 9, width = 7)
ArchaeasCentral <- read.table("chapter3/ArchaeasCentral", header=TRUE, sep="\t")
ArchaeasHeatPlot <- read.table("chapter3/ArchaeasHeatPlot", header=TRUE, sep="\t")
ArchaeasNp <- read.table("chapter3/ArchaeasNp", header=TRUE, sep="\t")
ArchaeasSMASH <- read.table("chapter3/ArchaeasSMASH", header=TRUE, sep="\t")
ArchaeasTaxa <- read.table("chapter3/ArchaeasTaxa", header=TRUE, sep="\t")
ArchaeasTotalBP.m<-merge(ArchaeasHeatPlot,ArchaeasTaxa,by.x="RastId",by.y="RastId") ## works as expected
ArchaeasHeatPlotBP.m <- melt(ArchaeasTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
ArchaeasHeatPlotBP.m<-subset(ArchaeasHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(ArchaeasHeatPlotBP.m, aes(x=ArchaeasHeatPlotBP.m$variable, y=ArchaeasHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggsave("chapter3/expansion_plotArchaeas.pdf", plot = expansion_plotActino,height = 9, width = 7)
View(ArchaeasTaxa)
View(ArchaeasTaxa)
install.packages("phyloseq")
library(ape)
setwd("~/GIT/phd/Thesis/tesis")
MyTree <- read.tree("/chapter1/TREES/100Cyanos")
MyTree <- read.tree("~/chapter1/TREES/100Cyanos")
setwd("~/GIT/phd/Thesis/tesis")
MyTree <- read.tree("~/chapter1/TREES/100Cyanos")
MyTree <- read.tree("chapter1/TREES/100Cyanos")
MyTree <- read.tree("chapter1/TREES/100Cyanos")
plot(MyTree, edge.width = 2)
plot(MyTree, edge.width = 2,font = 3,)
plot(MyTree, edge.width = 2,font = 3,)
plot(MyTree, edge.width = 2,font = .5)
plot(MyTree, edge.width = 2,font = .5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "pink")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "dark pink")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon",adj=1)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon",adj="1")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0.5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=1)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0.5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = 0.1, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = 0.1, edge.color = "blue",tip.color = "gray", adj=0)
library(genstats)
install.packages("genstats")
library(Biobase)
library(Biobase)
library(devtools)
library(genstats)
library(genstats)
`r paste(readLines('abstract.Rmd'), collapse = ' ')`
# If you'd rather include the preliminary content in files instead of inline
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools"," reshape","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape )
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
library(reshape)
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
View(docking.m)
View(docking.m)
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
g <- ggplot_build(p)
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
View(docking.m)
View(docking.m)
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
families <- read.table("100Archaea/100Archaea.all.r", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.all.r", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
View(families)
View(families)
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE)
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE)
, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
Frecuencia=sort(table(families$FunctionID),decreasing = TRUE)
head(Frecuencia)
indx <- which((Frecuencia[]) > 110) ;
indx
x=.005*.1*137.14
x
x=.01*.02*499.98
x=.005*.1*137.14
x
x=.01*.02*499.98
x
x=1/(154.253*02)
x
x=1/(154.253*.02)
x
x=.01*.02*499.98
x=.01*.02*499.98
x
x=1/(154.253*.02)
x
AAdata <- read.table(header=TRUE, text='
id TrpC  TrpD
1 4 4
2 4 4
3 4 4
')
AAdata
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA TrpC  TrpD TrpF
1 4 4 4
5 4 4 4
10 4 4 4
50 4 4 4
100 4 4 4
150 4 4 4
200 4 4 4
')
AAdata
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA microMolar TrpC  TrpD TrpF
1 4 4 4
5 4 4 4
10 4 4 4
50 4 4 4
100 4 4 4
150 4 4 4
200 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar TrpC  TrpD TrpF
1 4 4 4
5 4 4 4
10 4 4 4
50 4 4 4
100 4 4 4
150 4 4 4
200 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar TrpC  TrpD TrpF
1 4 4 4
5 4 4 4
10 4 4 4
50 4 4 4
100 4 4 4
150 4 4 4
200 4 4 4
')
AAdata
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume TrpC  TrpD TrpF
0               0      4 4 4
1 4 4 4
5 4 4 4
10 4 4 4
50 4 4 4
100 4 4 4
150 4 4 4
200 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume TrpC  TrpD TrpF
0 0 4 4 4
1 1.6 4 4 4
5 8 4 4 4
10 16 4 4 4
50 8 4 4 4
100 16 4 4 4
150 24 4 4 4
200 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume TrpC  TrpD TrpF
0 0 4 4 4
1 1.6 4 4 4
5 8 4 4 4
10 16 4 4 4
50 8 4 4 4
100 16 4 4 4
150 24 4 4 4
200 32 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume TrpC  TrpD TrpF
0 0     4 4 4
1 1.6 4 4 4
5 8 4 4 4
10 16 4 4 4
50 8 4 4 4
100 16 4 4 4
150 24 4 4 4
200 32 4 4 4
')
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume TrpC  TrpD TrpF
0                0        4   4     4
1 1.6 4 4 4
5 8 4 4 4
10 16 4 4 4
50 8 4 4 4
100 16 4 4 4
150 24 4 4 4
200 32 4 4 4
')
AAdata
#TrpF Concentration
#TrpF volume
AAdata <- read.table(header=TRUE, text='
AA_microMolar AA_Volume  Dilution TrpC  TrpD TrpF
0                0        -        4   4     4
1                1.6      AA_Dil3  4   4     4
5                8        AA_Dil3  4   4     4
10               16       AA_Dil3  4   4     4
50               8        AA_Dil2  4   4     4
100              16       AA_Dil2  4   4     4
150              24       AA_Dil2  4   4     4
200              32       AA_Dil2  4   4     4
')
d
AAdata["Buffer"] <- NA # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata$Buffer <- 160-AAdata$AA_Volume - AAdata$AA_TrpC -AAdata$AA_TrpD  -AAdata$AA_TrpF# As an example, the new column receives
AAdata
AAdata["Buffer"] <- 0 # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata$Buffer <- 160-AAdata$AA_Volume - AAdata$AA_TrpC -AAdata$AA_TrpD  -AAdata$AA_TrpF# As an example, the new column receives
AAdata$Buffer <- 160
AAdata
AAdata["Buffer"] <- 160 # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata
AAdata["Buffer"] <- as.numeric(160) # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata$Buffer <- 160-1
AAdata
AAdata["Buffer"] <- NA # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata$Buffer <- 160-1
AAdata
AAdata$Buffer <- 160-AAdata$AA_Volume
AAdata$Buffer <- 160-AAdata$AA_Volume- AAdata$TrpC -AAdata$TrpD  -AAdata$TrpF
AAdata
kable(AAdata)
library(knitr)
kable(AAdata)
trpF=4
0                0        -        4   4     TrpF
0                0        -        4   4     trpF
varia=4
0                0        -        4   4     $varia
AAdata["TrpF"] <- varia # That creates the new column named "MY_NEW_COLUMN" filled with "NA"
AAdata$TrpF
DTT_f=5*.4/324
DTT_f
