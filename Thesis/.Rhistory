(a>b)(a)
a[which(a>b)]
c<-a>b
c
suma<-sum(subx)
suma<-sum(c)
suma
a<-c(2,3,4)
b<-c(2,1,3)
c<-a>b
suma<-sum(c)
suma
ActinosHeatPlot>ExpTresHold
View(ActinosHeatPlot)
rownames(ActinosHP) <- ActinosHeatPlot[,1]
ActinosHP <- ActinosHeatPlot
rownames(ActinosHP) <- ActinosHeatPlot[,1]
View(ActinosHP)
ActinosHP <-subset(ActinosHeatPlot,variable!="TOTAL")
ActinosHP <-subset(ActinosHeatPlot,variable!="RastId")
ActinosHP <-subset(ActinosHeatPlot,column!="RastId")
ActinosHP <-subset(ActinosHeatPlot,column.names!="RastId")
ActinosHP <-subset(ActinosHeatPlot,column.name!="RastId")
ActinosHP <-ActinosHeatPlot
rownames(ActinosHP) <- ActinosHeatPlot[,1]
HeatAverage=colMeans(ActinosHP)
HeatSD=apply(ActinosHP, 2, sd)
ExpTresHold<-HeatAverage+HeatSD
ActinosHP>ExpTresHold
ExpCompare<-ActinosHP>ExpTresHold
View(ExpCompare)
ExpCompare<-ActinosHP>ExpTresHold$241429
ExpTresHold$241429
ActinosHP$241429
ActinosHP[,"241429"]
ActinosHP["241429",]
ExpCompare<-ActinosHP>ActinosHP["241429",]
ExpCompare<-ActinosHP["241429",]>ExpTresHold
View(ExpCompare)
ExpTresHold<-HeatAverage+HeatSD
str(ExpTresHold)
ExpTresHold
ActinosHP<-rbind (ActinosHP, ExpTresHold)
ExpTresHold$RastId<-Treshold
ExpTresHold$RastId<-"Treshold"
ExpTresHold
ActinosHP<-rbind (ActinosHP, ExpTresHold)
ActinosHP <-ActinosHeatPlot
rownames(ActinosHP) <- ActinosHeatPlot[,1]
HeatAverage=colMeans(ActinosHP)
HeatSD=apply(ActinosHP, 2, sd)
ExpTresHold<-HeatAverage+HeatSD
ExpTresHold$RastId<-"Treshold"
ExpTresHold
ActinosHP<-rbind (ActinosHP, ExpTresHold)
b<-(3,4,4,5,8,1,6)
OrganismsExpanded <- function(x){ ## is a column
a = table(x) # x is a vector
ultimo<-tail(x, n=1)
#str(HeatAverage)
#str(HeatSD)
#str(ExpTresHold)
subx<-x>ultimo ## vector of organisms with extra copies
suma<-sum(subx) ## how many
return(suma)
}
OrganismsExpanded(b)
ultimo<-tail(b, n=1)
ultimo
b<-c(3,4,4,5,8,1,6)
OrganismsExpanded(b)
ultimo<-tail(b, n=1)
ultimo
c<-OrganismsExpanded(b)
c
b<-c(10,4,4,5,8,1,6)
c<-OrganismsExpanded(b)
ultimo<-tail(b, n=1)
ultimo
c
subx<-b>ultimo
subx
suma<-sum(subx)
suma
FamiliesExpanded <- function(x){ ## is a column
ultimo<-tail(x, n=1)
subx<-x>ultimo ## vector of organisms with extra copies
suma<-sum(subx) ## how many
return(suma)
}
ExpandedFamilies=apply(ActinosHP,2, FamiliesExpanded)
str(ExpandedFamilies)
ExpandedFamilies$Phosphoglycerate_dehydrogenase
ExpandedFamilies["Phosphoglycerate_dehydrogenase"]
qplot(1:length(ExpandedFamilies), ExpandedFamilies, xlab ="Week Number") + geom_line()
qplot(1:length(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+axis.text.x=element_text(angle = 90,size = 10),
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+axis.text.x=element_text(angle = 90,size = 10)
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+ theme(legend.position	="none",plot.title = element_text(size = 14, face = "bold"),text = element_text(size = 12),axis.title = element_text(face="bold"),axis.text.x=element_text(size = 12),axis.text.y=element_text(size = 7))
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
ExpandedFamilies<-ExpandedFamilies[!names(ExpandedFamilies) %in% c("TOTAL","RastId")]
str(ExpandedFamilies)
qplot(1:length(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
sum(ExpandedFamilies)
count(ExpandedFamilies)
nonzero <- function(x) sum(x != 0)
NonZeroExpandedFamilies<-nonzero(ExpandedFamilies)
NonZeroExpandedFamilies
ExpandedFamilies
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
str(ExpandedFamilies)
ActinosHP <-ActinosHeatPlot
rownames(ActinosHP) <- ActinosHeatPlot[,1]
HeatAverage=colMeans(ActinosHP)
HeatSD=apply(ActinosHP, 2, sd)
ExpTresHold<-HeatAverage+HeatSD
ExpTresHold$RastId<-"Treshold"
ActinosHP<-rbind (ActinosHP, ExpTresHold)
FamiliesExpanded <- function(x){ ## is a column
ultimo<-tail(x, n=1)
subx<-x>ultimo ## vector of organisms with extra copies
suma<-sum(subx) ## how many
return(suma)
}
ExpandedFamilies=apply(ActinosHP,2, FamiliesExpanded)
ExpandedFamilies<-ExpandedFamilies[!names(ExpandedFamilies) %in% c("TOTAL","RastId")]
str(ExpandedFamilies)
nonzero <- function(x) sum(x != 0)
NonZeroExpandedFamilies<-nonzero(ExpandedFamilies)
NonZeroExpandedFamilies
ZeroExpandedFamilies<-zero(ExpandedFamilies)
zero <- function(x) sum(x == 0)
ZeroExpandedFamilies<-zero(ExpandedFamilies)
ZeroExpandedFamilies
str(ActinosHP)
View(ActinosTaxa)
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
ExpandedFamilies=apply(ActinosHP,2, FamiliesExpanded)
str(ExpandedFamilies)
nonzero <- function(x) sum(x != 0)
zero <- function(x) sum(x == 0)
NonZeroExpandedFamilies<-nonzero(ExpandedFamilies)
ZeroExpandedFamilies<-zero(ExpandedFamilies)
ZeroExpandedFamilies
NonZeroExpandedFamilies
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
ActinosHP <-ActinosHeatPlot
str(ActinosHP)
rownames(ActinosHP) <- ActinosHeatPlot[,1]
HeatAverage=colMeans(ActinosHP)
HeatSD=apply(ActinosHP, 2, sd)
ExpTresHold<-HeatAverage+HeatSD
ExpTresHold$RastId<-"Treshold"
ActinosHP<-rbind (ActinosHP, ExpTresHold)
FamiliesExpanded <- function(x){ ## is a column
ultimo<-tail(x, n=1)
subx<-x>ultimo ## vector of organisms with extra copies
suma<-sum(subx) ## how many
return(suma)
}
ExpandedFamilies=apply(ActinosHP,2, FamiliesExpanded)
ExpandedFamilies<-ExpandedFamilies[!names(ExpandedFamilies) %in% c("TOTAL","RastId")]
str(ExpandedFamilies)
nonzero <- function(x) sum(x != 0)
zero <- function(x) sum(x == 0)
NonZeroExpandedFamilies<-nonzero(ExpandedFamilies)
ZeroExpandedFamilies<-zero(ExpandedFamilies)
ZeroExpandedFamilies
NonZeroExpandedFamilies
ExpandedFamilies["Phosphoglycerate_dehydrogenase"]
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
Atleast1Percent<- function(x) sum(x >12.45)
Percent1ExpandedFamilies<-Atleast1Percent(ExpandedFamilies)
Percent1ExpandedFamilies
View(ActinosTaxa)
ActinosHP["242137",]
Coelicolor<-ActinosHP["242137",]
Coelicolor>ExpTresHold
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansions
CoeliExpansionsTotal<-sum(CoeliExpansions) ## how many expansions
CoeliExpansionsTotal
CoeliExpansionsFamilies<-CoeliExpansions[CoeliExpansions %in% CoeliExpansions>0]## which families are expanded
CoeliExpansionsFamilies
CoeliExpansionsFamilies<-CoeliExpansions[CoeliExpansions %in% CoeliExpansions==TRUE"]## which families are expanded
CoeliExpansionsFamilies
ExpTresHold$RastId<-"Treshold"
CoeliExpansionsFamilies<-CoeliExpansions[CoeliExpansions %in% CoeliExpansions=="TRUE"]## which families are expanded
CoeliExpansionsFamilies
CoeliExpansionsFamilies<-CoeliExpansions[CoeliExpansions %in% CoeliExpansions!="FALSE"]## which families are expanded
CoeliExpansionsFamilies
qplot(names(ExpandedFamilies), ExpandedFamilies, xlab ="Families") + geom_line()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
CoeliExpansionsFamilies<-Coelicolor[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
names(CoeliExpansionsFamilies)
names(Coelicolor)
CoeliExpansionsFamilies<-names(Coelicolor)[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
CoeliExpansionsFamilies<-Coelicolor[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
Coelicolor<-ActinosHP["242137",]
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansionsTotal<-sum(CoeliExpansions) ## how many expansions
CoeliExpansionsFamilies<-Coelicolor[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
CoeliExpansionsFamilies<-names(Coelicolor)[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
Coelicolor<-ActinosHP["242137",]
Coelicolor<-Coelicolor[!names(Coelicolor) %in% c("TOTAL","RastId")]
names(Coelicolor)
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansions<-CoeliExpansions[!names(CoeliExpansions) %in% c("TOTAL","RastId")]
CoeliExpansions<-Coelicolor>ExpTresHold
Coelicolor<-ActinosHP["242137",]
names(Coelicolor)
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansions<-CoeliExpansions[!names(CoeliExpansions) %in% c("TOTAL","RastId")]
CoeliExpansionsTotal<-sum(CoeliExpansions) ## how many expansions
CoeliExpansionsTotal ## 34
Coelicolor<-ActinosHP["242137",]
names(Coelicolor)
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansions<-CoeliExpansions[!names(CoeliExpansions) %in% c("TOTAL","RastId")]
CoeliExpansions
CoeliExpansions<-Coelicolor>ExpTresHold
CoeliExpansions
CoeliExpansions2<-CoeliExpansions[!names(CoeliExpansions) %in% c("TOTAL","RastId")]
CoeliExpansions2
!names(CoeliExpansions) %in% c("TOTAL","RastId")
names(CoeliExpansions) %in% c("TOTAL","RastId")
names(CoeliExpansions)
CoeliExpansions<-Coelicolor>ExpTresHold
names(CoeliExpansions)
CoeliExpansions
names(CoeliExpansions)
column.names(CoeliExpansions)
CoeliExpansions
names(CoeliExpansions)
str(CoeliExpansions)
Coelicolor<-ActinosHP["242137",]
names(Coelicolor)
CoeliExpansions<-Coelicolor>ExpTresHold
Coelicolor<-Coelicolor[!names(Coelicolor) %in% c("TOTAL","RastId")]
ExpTresHold2<.ExpTresHold[!names(Coelicolor) %in% c("TOTAL","RastId")]
ExpTresHold2<-ExpTresHold[!names(ExpTresHold) %in% c("TOTAL","RastId")]
CoeliExpansions<-Coelicolor>ExpTresHold2
CoeliExpansionsTotal<-sum(CoeliExpansions) ## how many expansions
CoeliExpansionsTotal ## 34
CoeliExpansionsFamilies<-Coelicolor[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
CoeliExpansionsFamilies<-names(Coelicolor)[CoeliExpansions]## which families are expanded
CoeliExpansionsFamilies
View(ActinosNp)
qplot(x=Central, data=ActinosNp, geom="bar", fill=kingdom, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
qplot(x=Central, data=ActinosNp, geom="bar", fill=np, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
qplot(x=Central, data=ActinosNp, geom="bar", fill=np, position="stack")+theme_bw()+ theme(legend.position	="none",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
sumarize (ActinosNP)
summary(ActinosNP)
ActinosNp <- read.table("../chapter4/ActinoNp", header=TRUE, sep="\t")
summary(ActinosNP)
View(ActinosNp)
summary(ActinosNp)
summary(ActinosNp)["Central"]
summary(ActinosNp)$"Central"
summary(ActinosNp)$Central
summary(ActinosNp)
str(summary(ActinosNp))
summary(ActinosNp)
summary(ActinosNp)[Central,]
summary(ActinosNp)["Central",]
summary(ActinosNp)[,"Central"]
cdata <- ddply(ActinosNP, "Central", summarise,N  = length(np))
cdata <- ddply(ActinosNp, "Central", summarise,N  = length(np))
cdata
summary(ActinosNp)
cdata[ "Phosphoglycerate_dehydrogenase ",]
cdata
View(cdata)
summary(ActinosNp)
View(ActinosNp)
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
ExpandedFamilies
cdata$Expansions=ExpandedFamilies
rownames(cdata) <- cdata[,1]
cdata$Expansions=ExpandedFamilies
ExpandedFamilies
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
rownames(cdata) <- cdata[,1]
View(cdata)
ExpandedFamilies
cdata[match(ExpandedFamilies, cdata$Central),]
cdata<-cdata[match(ExpandedFamilies, cdata$Central),]
cdata$Expansions=ExpandedFamilies
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
rownames(cdata) <- cdata[,1]
cdata[match(ExpandedFamilies, cdata$Central),]
ExpandedFamilies
cdata$Expansions=ExpandedFamilies
cdata<-cdata[match(ExpandedFamilies, cdata$Central),]
cdata<-cdata[match(names(ExpandedFamilies), cdata$Central),]
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
rownames(cdata) <- cdata[,1]
cdata<-cdata[match(names(ExpandedFamilies), cdata$Central),]
ExpandedFamilies
cdata$Expansions=ExpandedFamilies
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
cdata <- ddply(ActinosNp, "Central", summarise,Nps  = length(np))
cdata<-cdata[match(names(ExpandedFamilies), cdata$Central),]
ExpandedFamilies
cdata$Expansions=ExpandedFamilies
ActinosNpReduced<-subset(ActinosNp,ActinosNp$np=="none")
View(ActinosNpReduced)
ActinosNpReduced<-subset(ActinosNp,ActinosNp$np!="none")
cdata <- ddply(ActinosNpReduced, "Central", summarise,Nps  = length(np))
rownames(cdata) <- cdata[,1]
ExpandedAndRecruited<-intersecion(names(ExpandedFamilies),names(cdata))
ExpandedAndRecruited<-intersection(names(ExpandedFamilies),names(cdata))
ExpandedAndRecruited<-intersect(names(ExpandedFamilies),names(cdata))
str(ExpandedAndRecruited)
ExpandedAndRecruited
ActinosNpReduced<-subset(ActinosNp,ActinosNp$np!="none")
cdata <- ddply(ActinosNpReduced, "Central", summarise,Nps  = length(np))
rownames(cdata) <- cdata[,1]
names(ExpandedFamilies)
names(cdata)
rownames(cdata) <- cdata[,1]
row.names(cdata)
ExpandedAndRecruited<-intersect(names(ExpandedFamilies),row.names(cdata))
str(ExpandedAndRecruited)
ExpandedAndRecruited
cdata2<-subset(cdata,row.names(cdata) %in% ExpandedAndRecruited)
ExpandedFamilies2<-ExpandedFamilies[names(ExpandedFamilies) %in% ExpandedAndRecruited]
cdata2<-cdata2[match(names(ExpandedFamilies2), cdata2$Central),]
ExpandedFamilies
cdata$Expansions=ExpandedFamilies
cdata2$Expansions=ExpandedFamilies
View(cdata2)
cdata2$Expansions=ExpandedFamilies2
cdata2.m<- melt(cdata2,id = c("Central"))
View(cdata2.m)
ggplot2.barplot(data=cdata2.m, xName="Central",
groupName="variable")
ggplot2.barplot(data=cdata2.m, xName="Central",
groupName="value")
ggplot(cdata2.m, aes(x = cdata2.m$Central, y = cdata2.m$value, fill = cdata2.m$variable))+ geom_bar(stat = "identity")+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 10), legend.position = "bottom")
ArchaeasCentral <- read.table("../chapter3/ArchaeasCentral", header=TRUE, sep="\t")
ArchaeasHeatPlot <- read.table("../chapter3/ArchaeasHeatPlot", header=TRUE, sep="\t")
ArchaeasNp <- read.table("../chapter3/ArchaeasNp", header=TRUE, sep="\t")
ArchaeasSMASH <- read.table("../chapter3/ArchaeasSMASH", header=TRUE, sep="\t")
ArchaeasTaxa <- read.table("../chapter3/ArchaeasTaxa", header=TRUE, sep="\t")
ArchaeasTaxa$Kingdom<-"Archea"
ArchaeasSMASH$Kingdom<-"Archea"
ActinosCentral <- read.table("../chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("../chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("../chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("../chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosSMASH <- read.table("../chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("../chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosTaxa <- read.table("../chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosTaxa$Kingdom<-"Actinos"
ActinosTaxa$SuperPhylum<-"Actinos"
CyanosCentral <- read.table("../chapter5/CyanosCentral", header=TRUE, sep="\t")
CyanosHeatPlot <- read.table("../chapter5/CyanosHeatPlot", header=TRUE, sep="\t")
CyanosSMASH <- read.table("../chapter5/CyanosSMASH", header=TRUE, sep="\t")
CyanosTaxa$Kingdom<-"Cyanos"
CyanosSMASH$Kingdom<-"Cyanos"
CyanosTaxa <- read.table("../chapter5/CyanosTaxa", header=TRUE, sep="\t")
CyanosTaxa$Kingdom<-"Cyanos"
CyanosSMASH$Kingdom<-"Cyanos"
CyanosTaxa$SuperPhylum<-"Cyanobacteria"
TodosTaxa<-rbind(ArchaeasTaxa,CyanosTaxa,ActinosTaxa)
ArHP<-ArchaeasHeatPlot[,intersect(intersect(names(CyanosHeatPlot),names(ActinosHeatPlot)),names(ArchaeasHeatPlot))]
CyHP<-CyanosHeatPlot[,intersect(intersect(names(CyanosHeatPlot),names(ActinosHeatPlot)),names(ArchaeasHeatPlot))]
AcHP<-ActinosHeatPlot[,intersect(intersect(names(CyanosHeatPlot),names(ActinosHeatPlot)),names(ArchaeasHeatPlot))]
TodosHP<-rbind(ArHP,CyHP,AcHP)
TodosEXP_TAXA<-merge(TodosHP,TodosTaxa,by.x="RastId",by.y="RastId")
# Expansions of enzyme sequences from MiBIG from S coelicolor will be explored within the scope of the genomic database Streptomyces. The goal is to recover those enzymes that are not yet been considered as common on secondary metabolism.
## Moda is the most common copy number on an organism, Organisms with an extra copy are the ones that may have this copy recrutied into secondary metabolism
# This extra copy on at least 4 organismos
## In addtiion the distribution of the enzyme is desired to be present on at least half o the organisms (Not to exclusive)
## Too exclusive means only belong to secondary metabolism, we are looking for switches
## looking for an esay number between 0 and one that reflects too expanded, too exclusive
#  y el exp number,  mas entre .2<= Exp <=.6 y analizar eso árboles.
# One minus average organisms that contains one copy.
# More copies than organisms this number tends to one   ## too expanded
# few copies  on homogeneously on few organisms tends to cero ## too particular
# two copies by organism .5  , that is not usually the case  because there is some variance
######### Functions
OneOrMode <- function(x){ #max between 0 and one
a = table(x) # x is a vector
moda=a[which.max(a)]
inte=max(1,as.integer(names(moda)))
return(inte)
}
Mode <- function(x){ ## mode
a = table(x) # x is a vector
moda=a[which.max(a)]
inte=as.integer(names(moda))
return(inte)
}
OrganismsExtraCopy <- function(x){ ##how many organisms has an extra copy than the mode
a = table(x) # x is a vector
moda=a[which.max(a)]
inte=as.integer(names(moda)) #the moda
subx<-as.integer(a[which(as.integer(names(a))>inte)]) ## vector of organisms with extra copies
suma<-sum(subx) ## how many
return(suma)
}
OrgAtLeastOneCopy <- function(x){ ##how many organisms has a copy
a = table(x) # x is a vector
subx<-as.integer(a[which(as.integer(names(a))>0)]) ## vector of organnisms with at least one copy
suma<-sum(subx) ## how many
return(suma)
}
Copies <- function(x){ ##how many organisms has an extra copy than the mode
suma<-sum(x) ## how many
return(suma)
}
######## Reading and sorting data
## Read EvoMining tables (head plots)
tableExp <- read.csv("Figuras/ExpansionBlast.data", header=TRUE, sep="\t")  ### Enzyme BGC Function from MiBIG coelicolor
tableCentral <- read.csv("Figuras/Central.data", header=TRUE, sep="\t")  ### Enzyme Subsystem Function from
tableDistribution <- read.csv("Figuras/Enzymes.Distribution", header=TRUE, row.names=1,sep="\t")  ### Expansions from coelicolor (Heat plot score 0)
tableCentralDistribution <- read.csv("Figuras/CentralEnymes.Distribution.csv", header=TRUE, row.names=1,sep="\t") #Expansions from 93 enzimas central metabolism
#necesito poner el valor de names de moda en el renglon con el mismo valor en enzima
#number of organisms greater than mode  at least tenpercent of the genome
##Reducing tableExp to those I have distribution
tableExp=tableExp[tableExp$Enzyme %in% names(tableDistribution),]
tableExp <- tableExp[order(tableExp$Enzyme),]
tableDistribution <- tableDistribution[,order(names(tableDistribution))]
tableExpOriginal <- read.csv("Figuras/ExpansionBlast.data", header=TRUE, sep="\t")
tableExpOriginal=tableExp[tableExp$Enzyme %in% names(tableDistribution),]
tableExpOriginal <- tableExp[order(tableExp$Enzyme),]
################# Processing functions BGC data
modaOrOne=apply(tableDistribution,2, OneOrMode)
moda=apply(tableDistribution,2, Mode)
ExtraCopy=apply(tableDistribution,2, OrganismsExtraCopy)
OneCopy=apply(tableDistribution,2, OrgAtLeastOneCopy)
CopiesEvo=apply(tableDistribution,2, Copies)
Average=colMeans(tableDistribution)
#names(moda)
tableExp$Moda=moda
tableExp$Average=Average
tableExp$ExtraCopy=ExtraCopy
tableExp$OneCopy=OneCopy
tableExp$CopiesEvo=CopiesEvo
#modaOrOne
#moda
#ExtraCopy
#OneCopy
CopiesEvo
#Average
#CopiesEvo
sum(tableDistribution$Enzyme_108)
tableExpOriginal$Moda=moda
tableExpOriginal$Average=Average
tableExpOriginal$ExtraCopy=ExtraCopy
tableExpOriginal$OneCopy=OneCopy
tableExpOriginal$CopiesEvo=CopiesEvo
################# Processing functions central data
CentralmodaOrOne=apply(tableCentralDistribution,2, OneOrMode)
Centralmoda=apply(tableCentralDistribution,2, Mode)
CentralExtraCopy=apply(tableCentralDistribution,2, OrganismsExtraCopy)
CentralOneCopy=apply(tableCentralDistribution,2, OrgAtLeastOneCopy)
CentralCopiesEvo=apply(tableCentralDistribution,2, Copies)
CentralAverage=colMeans(tableCentralDistribution)
tableCentral$Moda=Centralmoda
tableCentral$Average=CentralAverage
tableCentral$ExtraCopy=CentralExtraCopy
tableCentral$OneCopy=CentralOneCopy
tableCentral$CopiesEvo=CentralCopiesEvo
#One minus average organisms that contains one copy.
#More copies than organisms this number tends to one   ## too expanded
# few copies  on homogeneously on few organisms tends to cero ## too particular
# two copies by organism   .5  , that is not usually the case  because there is some variance
#tableExp$ExpNum=(modaOrOne-tableExp$OneCopy/tableExp$CopiesEvo)/(modaOrOne)
#tableCentral$ExpNum=(CentralmodaOrOne-tableCentral$OneCopy/tableCentral$CopiesEvo)/(CentralmodaOrOne)
tableExp$ExpNum=1-tableExp$OneCopy/tableExp$CopiesEvo
tableCentral$ExpNum=1-tableCentral$OneCopy/tableCentral$CopiesEvo
tableExp<-tableExp[order(tableExp$Order),]
#tableCentral$Order=tableCentral$Order+193
tableCentral$Order
tableCentral<-tableCentral[order(tableCentral$Order),]
tableEnzymeReduced=subset(tableExp,tableExp$ExpNum<=.6 & tableExp$ExpNum>= .2 )
total <- rbind(tableExp,tableCentral)
todosImage<-ggplot(total,aes(x=total$Order, y=total$ExpNum,  color=total$BGC, size = total$Moda))+facet_wrap(~ total$Type)+ geom_point(shape=20) + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "right")
ggplot(total,aes(x=total$Order, y=total$ExpNum,  color=total$BGC, size = total$Moda))+facet_wrap(~ total$Type)+ geom_point(shape=18) + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "right")
ggsave(file="todosImage.svg", plot=todosImage, width=30, height=8)
#str(tableExp)
#tableExp$Enzyme
## ploting images
require("svglite")
#save the plot in a variable image to be able to export to svg
imageBGC=ggplot(tableExp,aes(x=tableExp$Order, y=tableExp$ExpNum, color=tableExp$BGC, size = tableExp$Moda))+ geom_point() + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "bottom")
ggsave(file="imageBGC.svg", plot=imageBGC, width=20, height=8)
ggplot(tableExp,aes(x=tableExp$Order, y=tableExp$ExpNum, color=tableExp$BGC, size = tableExp$Moda))+ geom_point() + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "right")
imageCentral= ggplot(tableCentral,aes(x=tableCentral$Order, y=tableCentral$ExpNum, color=tableCentral$BGC, size = tableCentral$Moda))+ geom_point() + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "right")
ggsave(file="imageCentral.svg", plot=imageCentral, width=20, height=8)
ggplot(tableEnzymeReduced,aes(x=tableEnzymeReduced$Order, y=tableEnzymeReduced$ExpNum, color=tableEnzymeReduced$BGC, size = tableEnzymeReduced$Moda))+ geom_point() + labs(x = "Metabolic Families", y = "Exp Number Actinobacteria Genomes",text = element_text(size=12)) + theme_bw()+theme(plot.title = element_text(size = 20, face = "bold"), text = element_text(size = 14), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 16), legend.position = "right")
StreptoNp <- read.table("Figuras/naturalProductsEnzymeReduced.data", header=TRUE, sep="\t")
qplot(x=Central, data=StreptoNp, geom="bar", fill=kingdom, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
qplot(x=Central, data=StreptoNp, geom="bar", fill=taxa, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
mm<-count(StreptoNp$Central)
qplot(x=Central, data=StreptoNp, geom="bar", fill=taxa, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
mm<-count(StreptoNp$Central)
qplot(x=Central, data=StreptoNp, geom="bar", fill=taxa, position="stack")+theme_bw()+ theme(legend.position	="bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
mm<-count(StreptoNp$Central)
install.packages("drc")
