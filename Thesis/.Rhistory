ArchaeasSMASH <- read.table("chapter3/ArchaeasSMASH", header=TRUE, sep="\t")
ArchaeasTaxa <- read.table("chapter3/ArchaeasTaxa", header=TRUE, sep="\t")
ArchaeasHeatPlot$RastId <- with(ArchaeasHeatPlot, reorder(ArchaeasHeatPlot$RastId, ArchaeasHeatPlot$TOTAL))
ArchaeasHeatPlot.m <- melt(ArchaeasHeatPlot)
ArchaeasHeatPlot.m<- ddply(ArchaeasHeatPlot.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
HP_Archaeas_Taxa<-merge(ArchaeasHeatPlot,ArchaeasTaxa,by.x = "RastId",by.y = "RastId")
HP_Archaeas_Taxa2<-subset(HP_Archaeas_Taxa,Order='Chroococcales')
HP_Archaeas_Taxa<-HP_Archaeas_Taxa[order(HP_Archaeas_Taxa$Order,HP_Archaeas_Taxa$Family),]
HP_Archaeas_Taxa.m<- melt(HP_Archaeas_Taxa)
HP_Archaeas_Taxa.m<- ddply(HP_Archaeas_Taxa.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
heatplot <- ggplot(HP_Archaeas_Taxa.m, aes(HP_Archaeas_Taxa.m$variable, HP_Archaeas_Taxa.m$RastId))+ geom_tile(aes(fill = HP_Archaeas_Taxa.m$rescale), colour = "white") + scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
library(scales)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
EXP_SMASH_Actino <- cbind(ActinosSMASH, TOTAL = rowSums(ActinosSMASH))
EXP_SMASH_Actino<-merge(ActinosHeatPlot,ActinosSMASH,by.x="RastId",by.y="RastId")
EXP_SMASH_Actino <- cbind(EXP_SMASH_Actino, TOTAL = rowSums(EXP_SMASH_Actino))
EXP_SMASH2_Actino<-merge(ActinosTaxa, EXP_SMASH_Actino, by.x="RastId",by.y="RastId")
qplot(Total.x, Total.y, data = EXP_SMASH, colour=Order)+theme_bw()+
#sn1Actino<-qplot(Size, TOTAL.y, data = EXP_SMASH2_Actino,colour=Order)+theme_bw()+ theme(legend.position	="bottom",plot.title = #element_text(size = 14, face = "bold"),text = element_text(size = 12),axis.title = #element_text(face="bold"),axis.text.x=element_text(size = 12),axis.text.y=element_text(size = 7))
#ggsave("chapter4/SMASHvsSizebyOrderActinos.pdf", plot = sn1Actino,height = 8, width = 6)
#sn2Actino<-qplot(Size, TOTAL.y, data = EXP_SMASH2_Actino,colour=Order)+theme_bw()+facet_grid(EXP_SMASH2_Actino$Order~.,scales="free")+ theme(legend.position	="bottom",plot.title = element_text(size = 14, face = "bold"),text = element_text(size = 12),axis.title = element_text(face="bold"),axis.text.x=element_text(size = 12),axis.text.y=element_text(size = 7))
#ggsave("chapter4/SMASHvsSizeGridOrderActinos.pdf", plot = sn2,height = 8, width = 6)
## Looking for color modifications
#sn + scale_color_brewer(palette="Dark2(100)")
#n + scale_color_brewer(palette=hm.palette(10))
## sn+ scale_color_hue(l=40, c=35)
ActinosEXP_SMASH<-merge(ActinosHeatPlot,ActinosSMASH,by.x="RastId",by.y="RastId")
View(ActinosHeatPlot)
View(ActinosHeatPlot)
View(ActinosSMASH)
View(ActinosSMASH)
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosEXP_SMASH<-merge(ActinosHeatPlot,ActinosSMASH,by.x="RastId",by.y="RastId")
ActinosEXP_SMASH2<-merge(ActinosTaxa, ActinosEXP_SMASH, by.x="RastId",by.y="RastId")
Actinossn1<-qplot(Size, TOTAL.y, data = ActinosEXP_SMASH2,colour=Order)+theme_bw()+ theme(legend.position	="bottom",plot.title = element_text(size = 14, face = "bold"),text = element_text(size = 12),axis.title = element_text(face="bold"),axis.text.x=element_text(size = 12),axis.text.y=element_text(size = 7))
ggsave("chapter3/ActinosSMASHvsSizebyOrder.pdf", plot = Actinossn1,height = 8, width = 6)
Actinossn2<-qplot(Size, TOTAL.y, data = ActinosEXP_SMASH2,colour=Order)+theme_bw()+facet_grid(ActinosEXP_SMASH2$Order~.,scales="free")+ theme(legend.position	="bottom",plot.title = element_text(size = 14, face = "bold"),text = element_text(size = 12),axis.title = element_text(face="bold"),axis.text.x=element_text(size = 12),axis.text.y=element_text(size = 7))
ggsave("chapter3/ActinosSMASHvsSizeGridOrder.pdf", plot = Actinossn2,height = 8, width = 6)
label(path = "chapter3/ActinosSMASHvsSizebyOrder.pdf", caption = "Correlation between Actinos genome size and antismash Natural products detection colored by Order",scale=.6,label = "ActinosSMASHvsSizebyOrder", type = "figure")
Actinosm1 <- merge(ActinosTaxa, ActinosSMASH, by.x = "RastId", by.y = "RastId")
Actinosm1.m <- melt(Actinosm1, id = c("RastId","Name","Phylum","Class","Order","Family","Contigs","Size","RastNo"))
Actinosm1.m <- melt(Actinosm1, id = c("RastId","Name","Phylum","Class","Order","Family","Contigs","Size","RastNo"))
Actinosm2.m<-subset(Actinosm1.m,value>0)
ActinosDiversity<-qplot(x=Order, data=Actinosm1.m, geom="bar", fill=Family, position="stack")+theme_bw()+ theme(text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggsave("chapter4/ActinosDiversity.pdf", plot =ActinosDiversity,height = 6, width = 14)
ActinosSmash<-qplot(x=Order, data=Actinosm2.m, geom="bar", fill=variable, position="stack",colours = hm.palette(100000))+theme_bw()+ theme(legend.position="none",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_TaxaActino.m, aes(HP_TaxaActino.m$variable, HP_TaxaActino.m$RastId))+ geom_tile(aes(fill = HP_TaxaActino.m$rescale), colour = "white") + scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=6), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
ActinosHeatPlot.m<- ddply(ActinosHeatPlot.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
HP_TaxaActino<-merge(ActinosHeatPlot,ActinosTaxa,by.x = "RastId",by.y = "RastId")
HP_TaxaActino<-HP_TaxaActino[order(HP_TaxaActino$Order,HP_TaxaActino$Family),]
HP_TaxaActino.m<- melt(HP_TaxaActino)
ggplot(HP_TaxaActino.m, aes(HP_TaxaActino.m$variable, HP_TaxaActino.m$RastId))+ geom_tile(aes(fill = HP_TaxaActino.m$rescale), colour = "white") + scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=6), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
View(HP_TaxaActino.m)
View(HP_TaxaActino)
View(HP_TaxaActino.m)
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
HP_TaxaActino<-merge(ActinosHeatPlot,ActinosTaxa,by.x = "RastId",by.y = "RastId")
HP_TaxaActino<-HP_TaxaActino[order(HP_TaxaActino$Order,HP_TaxaActino$Family),]
HP_TaxaActino<-merge(ActinosHeatPlot,ActinosTaxa,by.x = "RastId",by.y = "RastId")
View(HP_TaxaActino)
View(HP_TaxaActino)
HP_TaxaActino<-HP_TaxaActino[order(HP_TaxaActino$Order,HP_TaxaActino$Family),]
HP_TaxaActino.m<- melt(HP_TaxaActino)
View(HP_TaxaActino.m)
HP_TaxaActino.m<- ddply(HP_TaxaActino.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
heatplotActinos<-ggplot(HP_TaxaActino.m, aes(HP_TaxaActino.m$variable, HP_TaxaActino.m$RastId))+ geom_tile(aes(fill = HP_TaxaActino.m$rescale), colour = "white") + scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=6), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_TaxaActino.m, aes(HP_TaxaActino.m$variable, HP_TaxaActino.m$RastId))+ geom_tile(aes(fill = HP_TaxaActino.m$rescale), colour = "white") + scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=6), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
View(HP_TaxaActino.m)
View(HP_TaxaActino.m)
View(HP_TaxaActino.m)
View(ActinosTaxa)
View(ActinosTaxa)
Strepto<-subset(ActinosTaxa,Family="Streptomycetaceae")
Strepto<-subset(ActinosTaxa,Family="Streptomycetaceae")
Strepto
View(Strepto)
View(Strepto)
Strepto<-subset(ActinosTaxa,Family="Streptomycetaceae")
Strepto
Strepto<-subset(ActinosTaxa,Family=="Streptomycetaceae")
HP_Strepto<-merge(ActinosHeatPlot,Strepto,by.x = "RastId",by.y = "RastId")
HP_Strpto.m<- melt(HP_Strepto)
HP_Strepto.m<- melt(HP_Strepto)
View(HP_Strepto.m)
View(HP_Strepto.m)
HP_Strepto.m<- melt(HP_Strepto)
heatplotStrepto<-ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")  +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggsave("chapter4/HeatPlotStrepto.pdf", plot = heatplotStrepto,height = 36, width = 24)
View(HP_Strepto.m)
View(HP_Strepto.m)
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")  +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
HP_Strepto.m<- ddply(HP_Strepto.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")  +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
heatplotStrepto<-ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white") +coord_equal() +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white") +coord_equal() +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white") +coord_equal(size=2) +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
View(ActinosCentral)
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
PGA_AMINOACIDS=subset(ActinosCentral,Pathway=="3PGA_AMINOACIDS")
PGA_AMINOACIDS
PGA_AMINOACIDS.v=PGA_AMINOACIDS$Enzyme
PGA_AMINOACIDS.v
PGA_AMINOACIDS.v=c(PGA_AMINOACIDS$Enzyme)
PGA_AMINOACIDS.v
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[is.element(ActinosHeatPlot.m$variable,PGA_AMINOACIDS$Enzyme)]
View(HP_PGA_AMINOACIDS)
View(HP_PGA_AMINOACIDS)
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[is.element(ActinosHeatPlot.m$variable,PGA_AMINOACIDS$Enzyme)]
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[ActinosHeatPlot.m$variable %in% PGA_AMINOACIDS$Enzyme]
HP_PGA_AMINOACIDS=ActinosCentral[ActinosCentral$Enzyme %in% PGA_AMINOACIDS$Enzyme]
View(ActinosCentral)
View(ActinosCentral)
HP_PGA_AMINOACIDS=ActinosCentral[ActinosCentral$Enzyme %in% PGA_AMINOACIDS$Enzyme,]
View(HP_PGA_AMINOACIDS)
View(HP_PGA_AMINOACIDS)
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[ActinosHeatPlot.m$variable %in% PGA_AMINOACIDS$Enzyme,]
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
ActinosHeatPlot.m<- ddply(ActinosHeatPlot.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
HP_TaxaActino<-merge(ActinosHeatPlot,ActinosTaxa,by.x = "RastId",by.y = "RastId")
HP_TaxaActino<-HP_TaxaActino[order(HP_TaxaActino$Order,HP_TaxaActino$Family),]
HP_TaxaActino.m<- melt(HP_TaxaActino)
HP_TaxaActino.m<- ddply(HP_TaxaActino.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
heatplotActinos<-ggplot(HP_TaxaActino.m, aes(HP_TaxaActino.m$variable, HP_TaxaActino.m$RastId))+ labs(x = "Metabolic Families", y = "Genomes",text = element_text(size=12))+geom_tile(aes(fill = HP_TaxaActino.m$rescale ), colour = "white") +coord_equal() +scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggsave("chapter4/HeatPlotActinos.pdf", plot = heatplotActinos,height = 36, width = 24)
ggsave("chapter4/HeatPlotActinos.pdf", plot = heatplotActinos,height = 36, width = 24)
PGA_AMINOACIDS=subset(ActinosCentral,Pathway=="3PGA_AMINOACIDS")
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[ActinosHeatPlot.m$variable %in% PGA_AMINOACIDS$Enzyme,]
HP_PGA_AMINOACIDS=ActinosCentral[ActinosCentral$Enzyme %in% PGA_AMINOACIDS$Enzyme,]
HP_PGA_AMINOACIDS=ActinosHeatPlot.m[ActinosHeatPlot.m$variable %in% PGA_AMINOACIDS$Enzyme,]
Strepto<-subset(ActinosTaxa,Family=="Streptomycetaceae")
HP_Strepto<-merge(HP_PGA_AMINOACIDS,Strepto,by.x = "RastId",by.y = "RastId")
HP_Strepto.m<- melt(HP_Strepto)
HP_Strepto.m<- ddply(HP_Strepto.m, .(variable), transform,rescale=scale(value))  ## rescale escala toda la matriz, scale por columnas
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes",text = element_text(size=12))+geom_tile(aes(width=2, fill = HP_Strepto.m$rescale ), colour = "white")+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )+coord_equal()
setwd("~/GIT/phd/Thesis/tesis/.")
heatplot_Strepto_PGA_AMINOACIDS<-ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes expansions on PGA Aminoacids",text = element_text(size=12))+geom_tile(aes(fill = HP_Strepto.m$rescale ), colour = "white")+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=8), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 90, hjust = 1, vjust = 0.5,size=2) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
library(scales)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
heatplot_StreptoPGA<-ggplot(HP_Strepto.m, aes(HP_Strepto.m$variable, HP_Strepto.m$RastId))+ labs(x = "Metabolic Families", y = "Streptomyces Genomes expansions on PGA Aminoacids",text = element_text(size=12))+geom_tile(aes(fill = HP_Strepto.m$rescale ), colour = "white")+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+ theme(legend.text=element_text(size=12), legend.position = "bottom",text = element_text(size=8), axis.text.x = element_text(angle = 330, hjust = 1, vjust = 1,size=20) ,axis.text.y = element_text(angle = 0, hjust = 1, vjust = 0.5) )
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$rescale)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$rescale)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$rescale)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlot.m, ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$rescale) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
ActinosHeatPlot.m<- ddply(ActinosHeatPlot.m, .(variable), transform,count(value))  ## rescale escala toda la matriz, scale por columnas
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlot$RastId <- with(ActinosHeatPlot,reorder(ActinosHeatPlot$RastId, ActinosHeatPlot$RastId))
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
View(ActinosHeatPlot)
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
library(scales)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
ActinosCentral <- read.table("chapter4/ActinoCentral", header=TRUE, sep="\t")
ActinosHeatPlot <- read.table("chapter4/ActinoHeatPlot", header=TRUE, sep="\t")
ActinosNp <- read.table("chapter4/ActinoNp", header=TRUE, sep="\t")
ActinosSMASH <- read.table("chapter4/ActinosSMASH", header=TRUE, sep="\t")
ActinosTaxa <- read.table("chapter4/ActinoTaxa", header=TRUE, sep="\t")
ActinosHeatPlot.m <- melt(ActinosHeatPlot)
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlot.m <- melt(ActinosHeatPlot,id ="RastId")
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ctinosHeatPlot.m
ActinosHeatPlot.m <- melt(ActinosHeatPlot,id ="RastId")
HP_Act_less_TOTAL<-ActinosHeatPlot.m [ variable!="TOTAL"] ## works as expected
HP_Act_less_TOTAL<-subset(ActinosHeatPlot.m,variable!="TOTAL") ## works as expected
ActinosHeatPlot.m<-subset(ActinosHeatPlot.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlot.m, aes(x=ActinosHeatPlot.m$variable, y=ActinosHeatPlot.m$value)) + labs(x = "Metabolic Families", y = "Copies on Actiobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosTotalBP.m<-merge(ActinosHeatPlotBP.m,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ActinosHeatPlotBP.m <- melt(ActinosHeatPlot,id ="RastId")
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlotBP.m,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastID") ## works as expected
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastId") ## works as expected
clear
ActinosTotalBP.m<-merge(ActinosHeatPlot,ActinosTaxa,by.x="RastId",by.y="RastId") ## works as expected
View(ActinosTotalBP.m)
View(ActinosTotalBP.m)
View(ActinosTaxa)
ActinosHeatPlotBP.m <- melt(ActinosHeatPlot,id =c("RastId","Name","Phylum","Class","Order","Family"))
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
View(ActinosHeatPlot)
View(ActinosHeatPlot.m)
View(ActinosHeatPlot.m)
View(ActinosHeatPlotBP.m)
View(ActinosHeatPlotBP.m)
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ActinosHeatPlotBP.m <- melt(ActinosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
ActinosHeatPlotBP.m<-subset(ActinosHeatPlotBP.m,variable!="TOTAL") ## works as expected
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),colour="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggplot(ActinosHeatPlotBP.m, aes(x=ActinosHeatPlotBP.m$variable, y=ActinosHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
CyanosTotalBP.m<-merge(CyanosHeatPlot,CyanosTaxa,by.x="RastId",by.y="RastId") ## works as expected
CyanosCentral <- read.table("chapter5/CyanosCentral", header=TRUE, sep="\t")
CyanosHeatPlot <- read.table("chapter5/CyanosHeatPlot", header=TRUE, sep="\t")
CyanosNp <- read.table("chapter5/CyanosNp", header=TRUE, sep="\t")
CyanosSMASH <- read.table("chapter5/CyanosSMASH", header=TRUE, sep="\t")
CyanosTaxa <- read.table("chapter5/CyanosTaxa", header=TRUE, sep="\t")
CyanosTotalBP.m<-merge(CyanosHeatPlot,CyanosTaxa,by.x="RastId",by.y="RastId") ## works as expected
CyanosHeatPlotBP.m <- melt(CyanosTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
CyanosHeatPlotBP.m<-subset(CyanosHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(CyanosHeatPlotBP.m, aes(x=CyanosHeatPlotBP.m$variable, y=CyanosHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggsave("chapter5/expansion_plotCyanos.pdf", plot = expansion_plotActino,height = 9, width = 7)
ArchaeasCentral <- read.table("chapter3/ArchaeasCentral", header=TRUE, sep="\t")
ArchaeasHeatPlot <- read.table("chapter3/ArchaeasHeatPlot", header=TRUE, sep="\t")
ArchaeasNp <- read.table("chapter3/ArchaeasNp", header=TRUE, sep="\t")
ArchaeasSMASH <- read.table("chapter3/ArchaeasSMASH", header=TRUE, sep="\t")
ArchaeasTaxa <- read.table("chapter3/ArchaeasTaxa", header=TRUE, sep="\t")
ArchaeasTotalBP.m<-merge(ArchaeasHeatPlot,ArchaeasTaxa,by.x="RastId",by.y="RastId") ## works as expected
ArchaeasHeatPlotBP.m <- melt(ArchaeasTotalBP.m,id =c("RastId","Name","Phylum","Class","Order","Family","RastNo","Size","Contigs"))
ArchaeasHeatPlotBP.m<-subset(ArchaeasHeatPlotBP.m,variable!="TOTAL") ## works as expected
expansion_plotActino<-ggplot(ArchaeasHeatPlotBP.m, aes(x=ArchaeasHeatPlotBP.m$variable, y=ArchaeasHeatPlotBP.m$value),color="Family") + labs(x = "Metabolic Families", y = "Copies on Actinobacteria Genomes",text = element_text(size=12)) + geom_boxplot()+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6), legend.position = "bottom")
ggsave("chapter3/expansion_plotArchaeas.pdf", plot = expansion_plotActino,height = 9, width = 7)
View(ArchaeasTaxa)
View(ArchaeasTaxa)
install.packages("phyloseq")
library(ape)
setwd("~/GIT/phd/Thesis/tesis")
MyTree <- read.tree("/chapter1/TREES/100Cyanos")
MyTree <- read.tree("~/chapter1/TREES/100Cyanos")
setwd("~/GIT/phd/Thesis/tesis")
MyTree <- read.tree("~/chapter1/TREES/100Cyanos")
MyTree <- read.tree("chapter1/TREES/100Cyanos")
MyTree <- read.tree("chapter1/TREES/100Cyanos")
plot(MyTree, edge.width = 2)
plot(MyTree, edge.width = 2,font = 3,)
plot(MyTree, edge.width = 2,font = 3,)
plot(MyTree, edge.width = 2,font = .5)
plot(MyTree, edge.width = 2,font = .5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "pink")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "dark pink")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon",adj=1)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon",adj="1")
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0.5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=1)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0.5)
plot(MyTree, edge.width = 2,font = .5, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = 0.1, edge.color = "blue",tip.color = "salmon", adj=0)
plot(MyTree, edge.width = 2,font = 0.1, edge.color = "blue",tip.color = "gray", adj=0)
library(genstats)
install.packages("genstats")
library(Biobase)
library(Biobase)
library(devtools)
library(genstats)
library(genstats)
`r paste(readLines('abstract.Rmd'), collapse = ' ')`
# If you'd rather include the preliminary content in files instead of inline
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools"," reshape","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape )
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
library(reshape)
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
View(docking.m)
View(docking.m)
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
g <- ggplot_build(p)
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "steelblue",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
p<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
g <- ggplot_build(p)
g$data[[1]]["fill"]
g$data[[1]]
write.xlsx(g$data[[1]], "chapter2/mydata.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+scale_fill_gradient(low = "white", high = "black",na.value = "black")+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
View(docking.m)
View(docking.m)
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
color<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
gcolor <- ggplot_build(color)
gcolor$data[[1]]["fill"]
gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
table <- read.csv("chapter2/Substrate.data", row.names = 1,sep="\t")
kable(table,  caption = "Substrates \\label{tab:substrates}",caption.short = "Substrates ")
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
library(xlsx) # For save data on excel
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library( reshape )
library(plyr )
library(RColorBrewer)
families <- read.table("100Archaea/100Archaea.all.r", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.all.r", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
View(families)
View(families)
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE)
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE)
, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
families <- read.table("100Archea/100Archaea.r.allwc", header=TRUE, sep="\t")
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
Frecuencia=sort(table(families$FunctionID),decreasing = TRUE)
head(Frecuencia)
indx <- which((Frecuencia[]) > 110) ;
indx
