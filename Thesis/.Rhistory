if(!require(reedtemplates)){
library(devtools)
devtools::install_github("ismayc/reedtemplates")
}
library(reedtemplates)
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
#library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
#library(xlsx) # For save data on excel
docking <- read.csv("chapter2/SmallHeat.data", header=TRUE, sep="\t")
EnzymeOrder=factor(docking$Enzima,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "Enzima")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$Enzima <- factor(docking.m$Enzima, levels = rev(docking.m$Enzima[order(EnzymeOrder)]))
ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave("chapter2/colorHeatPlot.pdf", plot = colorHeatPlot,height = 36, width = 24)
gcolor <- ggplot_build(colorHeatPlot)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
write.xlsx(gcolor$data[[1]], "chapter2/mydataColor.xlsx")
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
docking
genomeOrder=factor(docking$genome,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking <- read.csv("chapter2/table15", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$Enzima))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=Enzima)) + labs(x = "Substrates", y = "Enzymes",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
genomeOrder
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
genomeOrder
docking <- read.csv("chapter2/table15", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
View(docking)
ggsave(file="chapter2/BigSCAPEheatplot.svg", plot=colorHeatPlot, width=10, height=10)
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot.svg", plot=colorHeatPlot, width=10, height=10)
docking <- read.csv("chapter2/table15", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot15.svg", plot=colorHeatPlot, width=10, height=10)
docking <- read.csv("chapter2/table10", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot15.svg", plot=colorHeatPlot, width=10, height=10)
ggsave(file="chapter2/BigSCAPEheatplot10.svg", plot=colorHeatPlot, width=10, height=10)
docking <- read.csv("chapter2/table10", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot10.svg", plot=colorHeatPlot, width=10, height=10)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
docking <- read.csv("chapter2/table15", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot15.svg", plot=colorHeatPlot, width=10, height=10)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=10)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=15)
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=15)
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none",plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none"plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none",plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
# This chunk ensures that the reedtemplates package is installed and loaded
# This reedtemplates package includes the template files for the thesis and also
# two functions used for labeling and referencing
if(!require(devtools))
install.packages("devtools", repos = "http://cran.rstudio.com")
if(!require(reedtemplates)){
library(devtools)
devtools::install_github("ismayc/reedtemplates")
}
library(reedtemplates)
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
#library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
#library(xlsx) # For save data on excel
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none",plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=15)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
# This chunk ensures that the reedtemplates package is installed and loaded
# This reedtemplates package includes the template files for the thesis and also
# two functions used for labeling and referencing
if(!require(devtools))
install.packages("devtools", repos = "http://cran.rstudio.com")
if(!require(reedtemplates)){
library(devtools)
devtools::install_github("ismayc/reedtemplates")
}
library(reedtemplates)
# List of packages required for this analysis
pkg <- c("dplyr", "ggplot2", "knitr", "devtools","RColorBrewer")
# Check if packages are not installed and assign the
# names of the packages not installed to the variable new.pkg
new.pkg <- pkg[!(pkg %in% installed.packages())]
# If there are any packages in the list that aren't installed,
# install them
if (length(new.pkg))
install.packages(new.pkg, repos = "http://cran.rstudio.com")
# Load packages
library(dplyr)
library(plyr)
library(reshape)
library(ggplot2)
library(knitr)
library(RColorBrewer)
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
#library(genstats) ## Next libraries are for coursera
library(devtools)
library(Biobase)
library(scales) #
#library(xlsx) # For save data on excel
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
##on colors
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none",plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=15)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
docking.m
docking
docking$total=sum($docking[,X23])
docking[,X23]
docking[,X23]
docking[,23]
sum(docking[,23])
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking[,23]
apply(docking,2,sum)
apply(docking,2,mean)
apply(docking,2,mean)
apply(docking,2,mean)
apply(docking,2,max)
apply(as.numeric(docking),2,max)
apply(docking,2,mix)
apply(docking,2,min)
apply(docking,2,sum)
apply(docking[,-1],2,sum)
sort(apply(docking[,-1],2,sum))
revrse(sort(apply(docking[,-1],2,sum)))
reverse(sort(apply(docking[,-1],2,sum)))
rev(sort(apply(docking[,-1],2,sum)))
names(rev(sort(apply(docking[,-1],2,sum))))
cat (genomes,names(rev(sort(apply(docking[,-1],2,sum)))))
cat(genomes,names(rev(sort(apply(docking[,-1],2,sum)))))
cat("genomes",names(rev(sort(apply(docking[,-1],2,sum)))))
names(docking)
names(docking)<- factor(names(docking), levels = cat("genomes",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
names(docking)<- factor(names(docking), levels = cat("genomes",names(rev(sort(apply(docking[,-1],2,sum))))))
docking.m <- melt(docking,id = "genome")
docking
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
docking.m <- melt(docking,id = "genome")
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
names(docking)
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
Colnames<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
docking[,order(Colnames)]
docking
docking.m <- melt(docking,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking.m$variable
docking<-docking[,order(Colnames)]
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
Colnames<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
dockingS<-docking[,order(Colnames)]
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable
dockingS
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
Colnames<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
dockingS<-docking[,order(Colnames)]
dockingS
names(dockingS)
dockingS<-docking[genomeOrder,order(Colnames)]
dockingS
Colnames<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking[genomeOrder,order(Colnames)]
docking[genomeOrder,]
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking[genomeOrder,]
genomeOrder
docking[genomeOrder,]
docking<- factor(docking, levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking
names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking
names(docking)
docking <- read.csv("chapter2/table05", sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking
names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
names(docking)
#names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking[,reorder(cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))))]
#names(docking)<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking[,reorder(cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))]
rev(sort(apply(docking[,-1],2,sum)))))
rev(sort(apply(docking[,-1],2,sum))))
rev(sort(apply(docking[,-1],2,sum)))
namesCol<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
namesCol<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
docking[,order(namesCol)]
docking
new<-docking[,order(namesCol)]
names(new)
namesCol
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking
namesCol<- factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
namesCol
factor(names(docking), levels = cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
new<-docking[,order( cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))]
new<-docking[,order( cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))))]
namesCol<- cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
new<-docking[,order(namesCol)]
namesCol
cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
namesCol<- cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
namesCol<- cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
cat("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
namesCol
size(cat("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
c("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
namesCol<- c("genome",names(rev(sort(apply(docking[,-1],2,sum)))))
namesCol
new<-docking[,order(namesCol)]
names(new)
namesCol<- factor(names(docking), levels = c("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
new<-docking[,order(namesCol)]
docking<-docking[,order(namesCol)]
names(docking)
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking<-docking[,order(as.factor(namesCol))]
names(docking)
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
names(docking)<- factor(names(docking), levels = c("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
names(docking)
docking<-docking[,order(as.factor(namesCol))]
names(docking)
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
View(docking.m)
View(docking.m)
docking.m$variable <- factor(docking.m$variable, levels = names(docking))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
names(docking)<- factor(names(docking), levels = c("genome",names(rev(sort(apply(docking[,-1],2,sum))))))
names(docking)
names(rev(sort(apply(docking[,-1],2,sum)))))
names(rev(sort(apply(docking[,-1],2,sum))))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
#library(xlsx) # For save data on excel
color_palette <- colorRampPalette(c("#3794bf", "#FFFFFF", "#df8640"))
hm.palette <- c("#3794bf", "#FFFFFF", "#df8640")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
hm.palette <- colorRampPalette(rev(brewer.pal(11, 'Spectral')), space='Lab')
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+
scale_fill_manual(values = (black,white))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+
scale_fill_manual(values = ("black","white"))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))++scale_fill_gradient(low = "white", high = "black",na.value = "orange")
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
hclust(docking)
hclust(docking[,])
d <- dist(docking, method = "euclidean")
fit <- hclust(d, method="ward")
plot(fit) # display dendogram
names(fit)
fit$order
names(fit)
fit$label
fit$labels
fit$labels
names(fit)
fit$order
doking(names)(order(fit$order))
names(docking)(order(fit$order))
names(docking)[order(fit$order))]
names(docking)[order(fit$order)]
docking.m$variable <- factor(docking.m$variable, levels = names(docking)[order(fit$order)])
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
#d <- dist(docking, method = "euclidean")
#fit <- hclust(d, method="ward")
#plot(fit) # display dendogram
#names(docking)[order(fit$order)]
#docking.m$variable <- factor(docking.m$variable, levels = names(docking)[order(fit$order)])
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
#scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
colorHeatPlot<-ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Gene cluster Families", y = "genome",text = element_text(size=12))+geom_raster(aes(fill=value))+theme_bw()+theme(legend.position="none",plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+ scale_fill_gradientn(colours = hm.palette(100),na.value = "gray")
ggsave(file="chapter2/BigSCAPEheatplot05.svg", plot=colorHeatPlot, width=10, height=15)
#gcolor$data[[1]]["fill"]
#gcolor$data[[1]]
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
docking <- read.csv("chapter2/table05", header=TRUE, sep="\t")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(dockingS,id = "genome")
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
genomeOrder=factor(docking$genome,levels=unique(docking$genome))
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
docking.m$variable
names(docking)
docking.m <- melt(dockingS,id = "genome")
docking.m <- ddply(docking.m, .(variable), transform,rescale = rescale(value))
docking.m$genome <- factor(docking.m$genome, levels = rev(docking.m$genome[order(genomeOrder)]))
docking.m$variable <- factor(docking.m$variable, levels = names(rev(sort(apply(docking[,-1],2,sum)))))
docking.m$variable
ggplot(docking.m, aes(x=variable, y=genome)) + labs(x = "Substrates", y = "genome",text = element_text(size=12))+ geom_raster(aes(fill=value))+theme_bw()+theme(plot.title = element_text(size = 14, face = "bold"), text = element_text(size = 12), axis.title = element_text(face="bold"), axis.text.x=element_text(angle = 90,size = 6))+scale_fill_gradient(low = "white", high = "black",na.value = "orange")
load("/media/strain/disco2/Alun/GIT/domains/PLOTS/GraficosDominios.Rmd")
source("/media/strain/disco2/Alun/GIT/domains/PLOTS/GraficosDominios.Rmd")
source(/media/strain/disco2/Alun/GIT/domains/PLOTS/GraficosDominios.Rmd
setwd("/media/strain/disco2/Alun/GIT/domains/PLOTS")
file = "../OUTPUTS/families20firstmission_ordered.csv"
